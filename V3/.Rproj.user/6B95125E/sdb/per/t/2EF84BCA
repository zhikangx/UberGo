{
    "collab_server" : "",
    "contents" : "library(leaflet)\n\n# Choices for drop-downs\nvars <- c(\n        \"Is SuperZIP?\" = \"superzip\",\n        \"Centile score\" = \"centile\",\n        \"College education\" = \"college\",\n        \"Median income\" = \"income\",\n        \"Population\" = \"adultpop\"\n)\n\nnavbarPage(\"XMAP\", id=\"nav\",\n           \n           tabPanel(\"Interactive map\",\n                    div(class=\"outer\",\n                        \n                        tags$head(\n                                # Include our custom CSS\n                                includeCSS(\"styles.css\"),\n                                includeScript(\"gomap.js\")\n                        ),\n                        hr(),\n                        hr(),\n                        # Read Input\n                        # fluidRow(\n                        #         column(6, offset = 4,\n                        #         textInput(\"caption\", \"Address\", \"Input Address\"),\n                        #         verbatimTextOutput(\"value\")\n                        #         )\n                        #         ),\n                        \n                        # If not using custom CSS, set height of leafletOutput to a number instead of percent\n                        leafletOutput(\"map\", width=\"100%\", height=\"100%\"),\n                        \n                        # Shiny versions prior to 0.11 should use class = \"modal\" instead.\n                        absolutePanel(id = \"controls\", class = \"panel panel-default\", fixed = TRUE,\n                                      draggable = TRUE, top = 100, left = \"auto\", right = 20, bottom = \"auto\",\n                                      width = 330, height = \"auto\",\n                                      # Read Input\n                                      h2(\"Space Explorer\"),\n                                      \n                                      fluidRow(\n                                              column(12,\n                                              textInput(\"caption\", \"Address\", \"Input Address\"),\n                                              verbatimTextOutput(\"value\"),\n                                              actionButton(\"button\", \"Explore Space\", class=\"btn-block\")\n                                              )\n                                              )\n                                      \n                                      # selectInput(\"color\", \"Color\", vars),\n                                      # selectInput(\"size\", \"Size\", vars, selected = \"adultpop\"),\n                                      # conditionalPanel(\"input.color == 'superzip' || input.size == 'superzip'\",\n                                      #                  # Only prompt for threshold when coloring or sizing by superzip\n                                      #                  numericInput(\"threshold\", \"SuperZIP threshold (top n percentile)\", 5)\n                                      # )\n\n                                      # plotOutput(\"histCentile\", height = 200),\n                                      # plotOutput(\"scatterCollegeIncome\", height = 250)\n                        )\n\n                        # tags$div(id=\"cite\",\n                        #          'Data compiled for ', tags$em('Coming Apart: The State of White America, 1960â€“2010'), ' by Charles Murray (Crown Forum, 2012).'\n                        # )\n                    )\n           ),\n           \n           tabPanel(\"Grading\",\n                    # fluidRow(\n                    #         column(3,\n                    #                selectInput(\"states\", \"States\", c(\"All states\"=\"\", structure(state.abb, names=state.name), \"Washington, DC\"=\"DC\"), multiple=TRUE)\n                    #         ),\n                    #         column(3,\n                    #                conditionalPanel(\"input.states\",\n                    #                                 selectInput(\"cities\", \"Cities\", c(\"All cities\"=\"\"), multiple=TRUE)\n                    #                )\n                    #         ),\n                    #         column(3,\n                    #                conditionalPanel(\"input.states\",\n                    #                                 selectInput(\"zipcodes\", \"Zipcodes\", c(\"All zipcodes\"=\"\"), multiple=TRUE)\n                    #                )\n                    #         )\n                    # ),\n                    # fluidRow(\n                    #         column(1,\n                    #                numericInput(\"minScore\", \"Min score\", min=0, max=100, value=0)\n                    #         ),\n                    #         column(1,\n                    #                numericInput(\"maxScore\", \"Max score\", min=0, max=100, value=100)\n                    #         )\n                    # ),\n                    \n                    hr(),\n                    DT::dataTableOutput(\"grading\")\n                    \n                    #\n                    # fluidRow(\n                    #         column(2, plotOutput(\"plot_1\")),\n                    #         column(2, plotOutput(\"plot_2\")))\n\n                    # fluidRow(\n                    #         column(8, DT::dataTableOutput(\"grading\")),\n                    #         column(4, plotOutput(\"plot_2\")))\n            ),\n           \n           tabPanel(\"Data explorer\",\n                    hr(),\n                    DT::dataTableOutput(\"record\")\n           ),\n           \n          \n           conditionalPanel(\"false\", icon(\"crosshair\"))\n)\n",
    "created" : 1531815667731.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4086645601",
    "id" : "2EF84BCA",
    "lastKnownWriteTime" : 1531817268,
    "last_content_update" : 1531817268843,
    "path" : "~/Desktop/Mixpace/ShinyMap/V3/ui.R",
    "project_path" : "ui.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}